<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AFEAAAAAAAAAYAAAAP8AAACAAAAAAAAAAJ8AAAD/AAAAQAAAAAAAAADfAAAA/wAAAP8AAADfAAAAAAAA
        AB8AAAD3AAAArQAAAAYAAACMAAAA/wAAAOwAAAAyAAAAAAAAAAAAAACmAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAAnAAAAAAAAABgAAAA/wAAAIAAAAAAAAAAnwAAAP8AAABAAAAAAAAAAN8AAAD/AAAA/wAA
        AN8AAAAAAAAAAAAAAA0AAAABAAAAAAAAAAAAAACIAAAA/wAAAO4AAAAYAAAAAAAAAAIAAAAhAAAAIgAA
        ACIAAAAiAAAAIgAAACAAAAABAAAAAAAAAGAAAAD/AAAAgAAAAAAAAACfAAAA/wAAAEAAAAAAAAAA3wAA
        AP8AAAD/AAAA3wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB+AAAA4wAAACIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAP8AAACAAAAAAAAAAJ8AAAD/AAAAQAAA
        AAAAAADfAAAA/wAAAP8AAADfAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAAA/wAAAIAAAAAAAAAAnwAA
        AP8AAABAAAAAAAAAAN8AAAD/AAAA/wAAAN8AAAAAAAAAIQAAAO4AAACaAAAAAgAAAIAAAADyAAAAMwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAD/AAAAgAAA
        AAAAAACfAAAA/wAAAEAAAAAAAAAA3wAAAP8AAAD/AAAA3wAAAAAAAAAMAAAA4QAAAP8AAADRAAAA/wAA
        AO8AAAAeAAAAAAAAAAAAAAAAAAAACwAAADMAAAAzAAAAMwAAADMAAAAzAAAAMQAAAAMAAAAAAAAAYAAA
        AP8AAACAAAAAAAAAAJ8AAAD/AAAAZgAAADMAAADmAAAA/wAAAP8AAADfAAAAAAAAAAAAAAAiAAAA8QAA
        AP8AAAD8AAAANgAAAAAAAAAAAAAAAAAAAAAAAACuAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAngAA
        AAAAAABgAAAA/wAAAIAAAAAAAAAAnwAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAN8AAAAAAAAAAAAA
        AIMAAAD/AAAA/wAAAP8AAACgAAAAAgAAAAAAAAAAAAAAAAAAAFIAAACqAAAAqgAAAKoAAACqAAAAqgAA
        AKkAAABMAAAAAAAAAGAAAAD/AAAAgAAAAAAAAACfAAAA/wAAAL8AAACqAAAA9AAAAP8AAAD/AAAA3wAA
        AAAAAAArAAAA/wAAAO4AAABTAAAA4QAAAP8AAABDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAP8AAACAAAAAAAAAAJ8AAAD/AAAAQAAAAAAAAADfAAAA/wAA
        AP8AAADfAAAAAAAAAAMAAAB0AAAALwAAAAAAAAAeAAAAewAAAA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAAA/wAAAIAAAAAAAAAAnwAAAP8AAABAAAAAAAAA
        AN8AAAD/AAAA/wAAAN8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAD/AAAAgAAAAAAAAACZAAAA/wAA
        AE0AAAACAAAA6gAAAPgAAAD/AAAA3wAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAWwAAAIcAAACIAAAAiAAA
        AIgAAACIAAAAiAAAAIgAAACIAAAAeQAAAB8AAAAAAAAAAAAAAAAAAAAAAAAAYAAAAP8AAACAAAAAAAAA
        AGMAAAD/AAAA3gAAALgAAAD/AAAAwQAAAPUAAADuAAAABQAAAAAAAAAAAAAAAQAAALMAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA8QAAADAAAAAAAAAAAAAAAAAAAAB0AAAA/wAA
        AHUAAAAAAAAABAAAAK4AAAD/AAAA/wAAAOIAAAAtAAAAtQAAAP8AAADRAAAAqgAAAKoAAAC2AAAA/wAA
        ANwAAABdAAAAVQAAAFUAAABVAAAAVQAAAFUAAABVAAAAVQAAAJoAAAD/AAAA2wAAAKoAAACqAAAAsQAA
        APUAAAD+AAAANQAAAAAAAAAAAAAAAAAAAC0AAAA+AAAACgAAAAAAAAAfAAAAzQAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAAgwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEwAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA+QAAAHEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAA
        ADMAAAAzAAAAgAAAAP8AAADdAAAAuwAAALsAAACpAAAAEAAAAAAAAABjAAAAuwAAALsAAAC/AAAA/wAA
        ANkAAAAzAAAAMwAAAC8AAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAA7AAAA/AAAAP8AAAD/AAAA/wAAAP8AAAB2AAAADQAAAOoAAAD/AAAA/wAA
        AP8AAAD/AAAArQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAIgAAACIAAABIAAAA/QAAAP8AAAD1AAAA/wAA
        ALQAAAAiAAAAIgAAACEAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABXAAAA2wAA
        APMAAACpAAAAEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAHMf//xxPf/8YTh//GEwOARgIBgEQCIIBEA/D/xAP4/8QDj/
        /EAwf/xEIDgERCAYBEQzCAREP4/8RDd//EQgP/xEIDgEQDB4BEAwOARAID/8RCI//EQ///xAPAA8QBgA
        HEAAAABxAP8A/8AIAf/4AB///AAf///B//97InN0YXR1cyI6MCwibXNnIjoiRXJyb3IiLCJyZWRpcmVj
        dCI6IiJ9
</value>
  </data>
</root>